plugins {
    id 'jacoco'
    id 'maven-publish'

    id "io.micronaut.library" version "3.1.1"
    id("org.sonarqube") version '3.1.1'
    id("com.diffplug.spotless") version "6.1.0"
}

group = groupId
version = projectVersion

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}


repositories {
    mavenLocal()
    mavenCentral()
}

micronaut {
    version "3.2.6"
    processing {
        incremental true
        module project.name
        group project.group
        annotations "io.micronaut.configuration.zeebe.*"
    }
}

dependencies {
    annotationProcessor 'io.micronaut:micronaut-inject-java'
    compileOnly "io.micronaut:micronaut-management"
    implementation 'io.micronaut:micronaut-runtime'
    implementation("io.micronaut.reactor:micronaut-reactor")

    api 'io.camunda:zeebe-client-java:1.3.1'

    testAnnotationProcessor 'io.micronaut:micronaut-inject-java'
    testImplementation "io.micronaut:micronaut-inject-java"
    testImplementation 'io.micronaut.test:micronaut-test-core'
    testImplementation 'io.micronaut.test:micronaut-test-junit5'
    testRuntimeOnly 'io.micronaut:micronaut-runtime'
    testImplementation "io.micronaut:micronaut-management"
    testImplementation 'org.awaitility:awaitility:4.1.1'

    testImplementation 'io.zeebe:zeebe-test-container:3.2.0'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}



spotless {

    java {
        encoding 'UTF-8'
        removeUnusedImports()
        eclipse().configFile "${projectDir}/inspection/codestyle.xml"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://nexus.devsun.ru/repository/releases/devsun/"
            def snapshotsRepoUrl = "https://nexus.devsun.ru/repository/snapshots/devsun/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username System.getenv("NEXUS_USER")
                password System.getenv("NEXUS_PASS")
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.incremental = true
    options.fork = true
}

javadoc {
    options.encoding = "UTF-8"
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

